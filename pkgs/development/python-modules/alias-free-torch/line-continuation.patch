diff --git a/src/alias_free_torch/resample.py b/src/alias_free_torch/resample.py
index b18e686..617ac3c 100644
--- a/src/alias_free_torch/resample.py
+++ b/src/alias_free_torch/resample.py
@@ -10,7 +10,7 @@ class UpSample1d(nn.Module):
     def __init__(self, ratio=2, kernel_size=None):
         super().__init__()
         self.ratio = ratio
-        self.kernel_size = int(6 * ratio // 2) * 2 if kernel_size is None \\
+        self.kernel_size = int(6 * ratio // 2) * 2 if kernel_size is None \
             else kernel_size
         self.stride = ratio
         pad = self.kernel_size // ratio - 1
@@ -38,7 +38,7 @@ class DownSample1d(nn.Module):
     def __init__(self, ratio=2, kernel_size=None):
         super().__init__()
         self.ratio = ratio
-        self.kernel_size = int(6 * ratio // 2) * 2 if kernel_size is None \\
+        self.kernel_size = int(6 * ratio // 2) * 2 if kernel_size is None \
             else kernel_size
         self.lowpass = LowPassFilter1d(cutoff=0.5 / ratio,
                                        half_width=0.6 / ratio,
@@ -55,7 +55,7 @@ class UpSample2d(nn.Module):
     def __init__(self, ratio=2, kernel_size=None):
         super().__init__()
         self.ratio = ratio
-        self.kernel_size = int(6 * ratio // 2) * 2 if kernel_size is None \\
+        self.kernel_size = int(6 * ratio // 2) * 2 if kernel_size is None \
             else kernel_size
         self.stride = ratio
         pad = kernel_size // 2 - ratio // 2
@@ -84,7 +84,7 @@ class DownSample2d(nn.Module):
     def __init__(self, ratio=2, kernel_size=None):
         super().__init__()
         self.ratio = ratio
-        self.kernel_size = int(6 * ratio // 2) * 2 if kernel_size is None \\
+        self.kernel_size = int(6 * ratio // 2) * 2 if kernel_size is None \
             else kernel_size
         self.lowpass = LowPassFilter2d(cutoff=0.5 / ratio,
                                        half_width=0.6 / ratio,
